import sys
import os.path
import os

exepath = os.path.abspath(sys.executable)
if sys.platform.startswith('win') and\
        os.path.split(exepath)[1] == 'hybmesh.exe':
    # if that is windows *.exe program
    libdir = os.path.join(os.path.dirname(exepath), '../lib')
else:
    # linux or python windows version
    libdir = '@LIB_INSTALL_DIR@'
homedir = os.path.expanduser('@HYBMESH_HOMEDIR@')
version = '@APPVERSION@'
last_ver_url = 'https://api.github.com/repos/kalininei/HybMesh/releases/latest'
proj_url = 'https://api.github.com/repos/kalininei/HybMesh/'

# preload all libraries in certain order for windows runs
# this is needed to avoid errors due to implicit library loads
if sys.platform.startswith('win'):
    _liblist = [
        'libgpc.dll',
        'libwinpthread-1.dll',
        'libgcc_s_seh-1.dll',
        'libquadmath-0.dll',
        'libgfortran-3.dll',
        'libgomp-1.dll',
        'libstdc++-6.dll',
        'libiconv-2.dll',
        'libxml2-2.dll',
        'libblas.dll',
        'liblapack.dll',
        'libmetis.dll',
        'libsuitesparseconfig.4.5.1.dll',
        'libcamd.2.4.4.dll',
        'libccolamd.2.9.4.dll',
        'libcolamd.2.9.4.dll',
        'libamd.2.4.4.dll',
        'libcholmod.3.0.9.dll',
        'libspqr.2.0.5.dll',
        'libtetgen.dll',
        'libGmshLocal.dll',
        'libpolyclipping.dll',
        'libhmproject.dll',
        'libbgeom2d.dll',
        'libhmmath.dll',
        'libhybmesh_contours2d.dll',
        'libcrossgrid.dll',
        'libhmnumeric.dll',
        'libhmmapping.dll',
        'libhmblay.dll',
        'libhmgrid3d.dll',
        'libhmcport.dll',
    ]
    import ctypes as ct
    for name in _liblist:
        try:
            ct.cdll.LoadLibrary(os.path.join(libdir, name))
        except Exception as e:
            sys.exit("error in library linking: %s, with message %s" %
                     (name, str(e)))
