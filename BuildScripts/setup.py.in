# APPNAME - name of package
# APPVERSION - version of package
# PYROOTDIR - root directory
# PyPack    - python package directory in PYROOTDIR

import re
import os
import os.path
from distutils.core import setup
import shutil
import sys

# setup.py can be called either from cmake install procedure or from
# nsis installer on user windows system.
# In the latter case option '--from-nsis-installer' should be used.
if '--from-nsis-installer' in sys.argv:
    # we are in _tmp folder which contains hybmeshpack with already copied config_installed
    rootdir = os.path.abspath('.')
    # remove this option or it will be parsed by setup and reported as bad option.
    sys.argv.remove('--from-nsis-installer')
else:
    rootdir = os.path.abspath('@PYROOTDIR@')
    # place config_installed to package directory before setup
    conf_orig = '@PYOUTDIR@/config_installed.py'
    conf_src = os.path.join('@PYROOTDIR@', '@PyPack@', os.path.basename(conf_orig))
    shutil.copyfile(conf_orig, conf_src)


packdir = os.path.join(rootdir, '@PyPack@')


def find_packages(path, relpath):
    """ finds all packages in path and returns it in [path.to.pack]
        formmat.
    """
    ret = []
    for root, dirs, files in os.walk(path):
        if '__init__.py' in files:
            root = os.path.relpath(root, relpath)
            ret.append(re.sub('^[^A-z0-9_]+', '', root.replace('/', '.')))
    return ret


setup(
    name="@APPNAME@",
    version="@APPVERSION@",
    author = "KalininEI",
    author_email = "KalininEI@yandex.ru",
    url = "https://github.com/kalininei/hybmesh",
    package_dir={'': rootdir},
    packages=find_packages(packdir, rootdir))

# remove config_installed from package directory after setup
os.remove(conf_src)
